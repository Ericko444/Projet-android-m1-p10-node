// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Categorie {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  places Place[]
}

model Province {
  id     Int     @id @default(autoincrement())
  name   String  @unique @db.VarChar(255)
  places Place[]
}

model Place {
  id          Int          @id @default(autoincrement())
  title       String       @unique @db.VarChar(255)
  desc        String       @db.Text
  latitude    Float        @default(0) @db.Float
  longitude   Float        @default(0) @db.Float
  province    Province     @relation(fields: [provinceId], references: [id])
  provinceId  Int
  categorie   Categorie    @relation(fields: [categorieId], references: [id])
  categorieId Int
  tags        PlaceToTag[]
  favorites   Favorites[]
  reviews     Review[]
  images      ImagePlace[]
  videos       videoPlace[]
}

model Tag {
  id     Int          @id @default(autoincrement())
  name   String       @db.VarChar(255)
  places PlaceToTag[]
}

model PlaceToTag {
  place     Place    @relation(fields: [placeId], references: [id])
  placeId   Int
  tag       Tag      @relation(fields: [tagId], references: [id])
  tagId     Int

  @@id([placeId, tagId])
}

model User {
  id        Int         @id @default(autoincrement())
  username  String      @unique @db.VarChar(255)
  name      String      @db.VarChar(255)
  email     String      @unique @db.VarChar(255)
  password  String      @db.VarChar(255)
  profile   String      @db.VarChar(255)
  favorites Favorites[]
  token UserToken?
  notifications Notification[]
}

model Review {
  id      Int    @id @default(autoincrement())
  userId  Int
  placeId Int
  place   Place  @relation(fields: [placeId], references: [id])
  note    Int
  comment String @db.VarChar(255)
}

model Favorites {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  placeId Int
  place   Place @relation(fields: [placeId], references: [id])
}

model ImagePlace {
  id      Int    @id @default(autoincrement())
  placeId Int
  place   Place  @relation(fields: [placeId], references: [id])
  image  String @db.VarChar(255)
}

model videoPlace {
  id      Int    @id @default(autoincrement())
  placeId Int
  place   Place  @relation(fields: [placeId], references: [id])
  video   String @db.VarChar(255)
}

model setting {
  id           Int     @id @default(autoincrement())
  theme        String  @db.VarChar(255)
  lang         String  @db.VarChar(255)
  notification Boolean @default(false)
  synch        Int
}

model UserToken{
  id Int     @id @default(autoincrement())
  userId Int @unique
  user User?  @relation(fields: [userId], references: [id])
  token String  @db.VarChar(255)
}

model Notification{
  id Int     @id @default(autoincrement())
  userId Int 
  user User @relation(fields: [userId], references: [id])
  title String  @db.VarChar(255)
  body String @db.VarChar(255)
  date DateTime
}